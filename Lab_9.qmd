---
title: "Lab 9"
author: "Lana Huynh"
format: 
  html: 
    self-contained: true
    code-tools: true
editor: visual
execute: 
  echo: true
  include: true
  message: false
  warning: false
---

```{r}
#| label: Libraries

library(tidyverse)
library(here)
library(ggthemes)
```

## Ordinary plotting functions on data

```{r}
#| label: Data read in

surf <- read_csv(here("Data", "df_surf.csv"))
```

```{r}
#| label: Data cleaning

surf_clean <- surf |>
  select_if(is.numeric)
```

```{r}
#| label: Plotting

# surf and turf color palette
palette = c("#F4CC70", "#DE7A22", "#20948B", "#6AB187")

ggplot(
  data = surf_clean,
  mapping = aes(
    x = board_length,
    y = board_width,
    xend = wave_height_max,
    yend = wave_height_min,
    colour = surfer_height,
    size = surfer_age
  )) + 
  geom_segment(show.legend = FALSE) +
  coord_polar() +
  scale_y_continuous(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) + 
  scale_colour_gradientn(colours = palette) +
  scale_size(range = c(0, 10)) + 
  theme_void() +
  ggtitle("Seashell Scripts")
```

I saw the "Surf & Turf" color palette from Canva, and I wanted to do something surfing or beach themed. I then graphed the points in polar coordinates and noticed that it kind of looked like a seashell.

## Generative Art

```{r}
#| label: Data Sampling

sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE))
  )
}
```

```{r}
#| label: Canva Sampling

sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}
```

```{r}
#| label: Get Data and Palette

dat <- sample_data(n = 100, seed = 1)
pal <- sample_canva(seed = 1)
```

```{r}
#| label: Generate Art

polar_styled_plot <- function(data, palette) {
  n <- nrow(data)
  angles <- seq(0, 2 * pi, length.out = n)
  radii <- sqrt(data$x0)

  data <- data |>
    mutate(
      x = radii * cos(angles),
      y = radii * sin(angles),
      xend = 0,
      yend = 0,
      color = sample(palette, n, replace = TRUE)
    )
  
  plot <- ggplot(data, aes(x, y, color = color)) +
    scale_color_manual(values = palette) +
    coord_equal() +
    theme_void() +
    theme(legend.position = "none") +
    ggtitle("StaR")

  return(plot + geom_segment(aes(xend = xend, yend = yend), size = 2))
}
```

```{r}
#| label: Plotting

polar_styled_plot(dat, pal)
```

I noticed that a large amount of the generative art utilized polar styled plots. Therefore, I thought it would be interesting to plot something that would utilize segments that had varying angles and lengths to mimic a star. I utilized sampled data to generate the various angles and radii lengths for each of the segments. This is how "StaR" was created (capital R since it was created in R :)).
