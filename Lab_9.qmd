---
title: "Lab 9"
author: "Lana Huynh"
format: 
  html: 
    self-contained: true
    code-tools: true
editor: visual
execute: 
  echo: true
  include: true
  message: false
  warning: false
---

```{r}
#| label: Libraries

library(tidyverse)
library(here)
library(ggthemes)
```

## Ordinary plotting functions on data

```{r}
#| label: Data read in

surf <- read_csv(here("Data", "df_surf.csv"))
```

```{r}
#| label: Data cleaning

surf_clean <- surf |>
  select_if(is.numeric)
```


```{r}
#| label: Plotting

# surf and turf color palette
palette = c("#F4CC70", "#DE7A22", "#20948B", "#6AB187")

ggplot(
  data = surf_clean,
  mapping = aes(
    x = board_length,
    y = board_width,
    xend = wave_height_max,
    yend = wave_height_min,
    colour = surfer_height,
    size = surfer_age
  )) + 
  geom_segment(show.legend = FALSE) +
  coord_polar() +
  scale_y_continuous(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) + 
  scale_colour_gradientn(colours = palette) +
  scale_size(range = c(0, 10)) + 
  theme_void() +
  ggtitle("Seashell Scripts")
```
Seashell Scripts features a beautiful arrangement of various seashells, forming a colorful and eye-catching mosaic. The shells' natural shine and texture create a lively and three-dimensional look, showing the beauty and balance of ocean life. 

I saw the "Surf & Turf" color palette from Canva, and I wanted to do something surfing or beach themed. I then graphed the points in polar coordinates and noticed that it kind of looked like a seashell. I then played around with the scales and found this set of arguments to be the best fitting ones. 

## Generative Art

```{r}
sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}
```

```{r}
sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE))
  )
}
```

```{r}
polar_styled_plot <- function(data = NULL, palette) {
  ggplot(
    data = data,
    mapping = aes(
      x = x0,
      y = y0,
      xend = x1,
      yend = y1,
      colour = shade,
      size = size
    )) + 
    coord_polar(clip = "off") +
    scale_y_continuous(
      expand = c(0, 0),
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) +
    scale_x_continuous(
      expand = c(0, 0), 
      limits = c(0, 1), 
      oob = scales::oob_keep
    ) + 
    scale_colour_gradientn(colours = palette) + 
    scale_size(range = c(0, 10)) + 
    theme_void() + 
    guides(
      colour = guide_none(),
      size = guide_none(),
      fill = guide_none(),
      shape = guide_none()
    )
}
```

```{r}
dat <- sample_data(n = 100, seed = 1) 
pal <- sample_canva(seed = 1)

polar_styled_plot(data = dat, palette = pal) + geom_segment()
polar_styled_plot(data = dat, palette = pal) + geom_path()
polar_styled_plot(data = dat, palette = pal) + geom_point()
```

